(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{195:function(e,n,a){"use strict";a.r(n),a.d(n,"frontMatter",(function(){return o})),a.d(n,"metadata",(function(){return c})),a.d(n,"rightToc",(function(){return s})),a.d(n,"default",(function(){return m}));var t=a(1),r=a(9),i=(a(0),a(215)),o={id:"airship-battle",title:"Airship Battle"},c={id:"examples/airship-battle",title:"Airship Battle",description:'[<i className="icon-right">\u27a1\ufe0f</i>](/docs/modules/general/main)',source:"@site/docs/examples/airship-battle.mdx",permalink:"/docs/examples/airship-battle",editUrl:"https://github.com/PGMDev/Website/edit/master/docs/examples/airship-battle.mdx",sidebar:"Examples"},s=[],l={rightToc:s};function m(e){var n=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(t.a)({},l,a,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/general/main"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nEvery map XML file starts with the XML header and then the base ",Object(i.b)("inlineCode",{parentName:"p"},"<map>")," module."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0"?>\n<map proto="1.4.0">\n\x3c!-- Specifies what the map is called --\x3e\n<name>Airship Battle</name>\n\x3c!-- States what version the map is --\x3e\n<version>1.0.4</version>\n\x3c!-- Tells the teams what the objective is in order to win the game --\x3e\n<objective>Leak lava from the enemy\'s obsidian core into the void.</objective>\n\x3c!-- States who made the map --\x3e\n<authors>\n    <author uuid="30e27366-0b14-4076-8f55-0819ece49ce3"/> \x3c!--  Dewtroid  --\x3e\n</authors>\n\x3c!-- Shows any map rules that are not in normal OCN rules --\x3e\n<rules>\n    <rule>Dispensers are disabled</rule>\n</rules>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/format/teams"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the teams ",Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/reference/misc/formatting#chatColors"}),"colors"),", names and how many people can be on the teams."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<teams>\n    <team id="blue-team" color="blue" max="24">Blue Team</team>\n    <team id="red-team" color="dark red" max="24">Red Team</team>\n</teams>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/gear/kits"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefine a kit with special TNT defuser shears."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<kits>\n    <kit id="shears">\n        <item slot="8" name="`6TNT Defuser" lore="`7Right click to defuse teammate\'s TNT|`7Does not work in `9water`7!" material="shears"/>\n    </kit>\n</kits>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/mechanics/spawns"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nSpecify where the previously defined teams will spawn, the kit they will spawn with and what direction they face."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<spawns>\n    <spawn team="blue-team" kit="shears" yaw="270">\n        <region>\n            <cuboid min="4.5,91,-34" max="7.5,91,-31"/>\n        </region>\n    </spawn>\n    <spawn team="red-team" kit="shears" yaw="90">\n        <region>\n            <cuboid min="-30.5,91,-34" max="-27.5,91,-31"/>\n        </region>\n    </spawn>\n    <default yaw="180">\n        <region>\n            <cylinder base="-11.5,90,-33" radius="3" height="0"/>\n        </region>\n    </default>\n</spawns>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/mechanics/filters"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nThese filters is used to prevent people from placing dispensers or obsidian in the regions they are applied to."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<filters>\n    <not id="deny-dispenser">\n        <material>dispenser</material>\n    </not>\n    <not id="deny-obsidian">\n        <material>obsidian</material>\n    </not>\n</filters>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/mechanics/regions"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nThese regions reference the dispenser and obsidian filters defined above and states where they will work."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<regions>\n    <apply leave="never" message="Don\'t exit the playing field!">\n        <region>\n            <union>\n                <rectangle min="-102,-4" max="102,125"/> \x3c!-- Main area --\x3e\n                <rectangle min="-36,-16" max="13,-2"/> \x3c!-- Area between spawn tunnels --\x3e\n            </union>\n        </region>\n    </apply>\n    <apply block="never" message="Don\'t edit blocks outside the playing field!">\n        <region>\n            <negative>\n                <union id="map">\n                    <rectangle min="-100,-2" max="100,123"/> \x3c!-- Main area --\x3e\n                    <rectangle min="-36,-14" max="13,-2"/> \x3c!-- Area between spawn tunnels --\x3e\n                </union>\n            </negative>\n        </region>\n    </apply>\n    <apply block-break="deny-obsidian" message="You may not break obsidian outside the core area!">\n        <region>\n            <complement>\n                <region id="map"/>\n                <cuboid min="13,85,23" max="18,92,30"/>\n                <cuboid min="-41,85,23" max="-36,92,30"/>\n            </complement>\n        </region>\n    </apply>\n    <apply block-place="deny-dispenser" message="Dispensers are disabled on this map!">\n        <region>\n            <everywhere/>\n        </region>\n    </apply>\n</regions>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/objectives/dtc"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nThis specifies what material the core is made of, who each core belongs to and how far the lava needs to leak."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),'<cores material="obsidian" leak="10">\n    <core team="blue">\n        <region>\n            <cuboid min="13,85,23" max="18,92,30"/>\n        </region>\n    </core>\n    <core team="red">\n        <region>\n            <cuboid min="-41,85,23" max="-36,92,30"/>\n        </region>\n    </core>\n</cores>\n')),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/gear/repair-remove-keep"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nRemove shears, obsidian and gold block items from the playing field when they are dropped."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),"<itemremove>\n    <item>shears</item>\n    <item>obsidian</item>\n    <item>gold block</item>\n</itemremove>\n")),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/objectives/other"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f"))),Object(i.b)("p",null,"This specifies how high players can build however it doesn't stop them from going over this limit."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),"<maxbuildheight>125</maxbuildheight>\n")),Object(i.b)("p",null,Object(i.b)("a",Object(t.a)({parentName:"p"},{href:"/docs/modules/general/main"}),Object(i.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nClose the main ",Object(i.b)("inlineCode",{parentName:"p"},"<map>")," module."),Object(i.b)("pre",null,Object(i.b)("code",Object(t.a)({parentName:"pre"},{className:"language-xml"}),"</map>\n")))}m.isMDXComponent=!0},215:function(e,n,a){"use strict";a.d(n,"a",(function(){return b})),a.d(n,"b",(function(){return u}));var t=a(0),r=a.n(t);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function c(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=r.a.createContext({}),m=function(e){var n=r.a.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):c({},n,{},e)),a},b=function(e){var n=m(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=Object(t.forwardRef)((function(e,n){var a=e.components,t=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=m(a),d=t,u=b["".concat(o,".").concat(d)]||b[d]||p[d]||i;return a?r.a.createElement(u,c({ref:n},l,{components:a})):r.a.createElement(u,c({ref:n},l))}));function u(e,n){var a=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=a.length,o=new Array(i);o[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:t,o[1]=c;for(var l=2;l<i;l++)o[l]=a[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);